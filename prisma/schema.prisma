generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --- ENUMS ---

enum Role {
  OWNER
  ADMIN
  USER
}

enum PaymentStatus {
  PENDING_PAYMENT
  PAID
  FAILED
  EXPIRED
  CANCELLED
  REFUNDED
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPING
  COMPLETED
  CANCELLED
  REFUND
}

enum DiscountType {
  SALE
  VOUCHER
}

enum DiscountValueType {
  PERCENTAGE
  FIXED
}

// --- MODELS ---

model User {
  id                    Int            @id @default(autoincrement())
  email                 String         @unique
  name                  String
  password              String
  role                  Role           @default(USER)
  permissions           String[]
  phone                 String?
  address               Json?          @default("{}")
  socialMedia           Json           @default("{}")
  createdAt             DateTime       @default(now())
  updatedAt             DateTime       @updatedAt
  conversationsStarted  Conversation[] @relation("UserConversations")
  assignedConversations Conversation[] @relation("AdminAssignments")
  sentMessages          ChatMessage[]
  orders                Order[]
  cart                  Cart?
  voucherUsages         VoucherUsage[]
}

model Language {
  id        Int      @id @default(autoincrement())
  name      String
  code      String   @unique
  isActive  Boolean  @default(true)
  isDefault Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Currency {
  id                 Int                 @id @default(autoincrement())
  name               String
  code               String              @unique
  symbol             String
  isActive           Boolean             @default(true)
  isDefault          Boolean             @default(false)
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  productPrices      ProductPrice[]
  shippingZonePrices ShippingZonePrice[]
  shippingRatePrices ShippingRatePrice[]
}

model Category {
  id            Int           @id @default(autoincrement())
  name          Json
  imageUrl      String?
  subCategories SubCategory[]
}

model SubCategory {
  id         Int       @id @default(autoincrement())
  name       Json
  imageUrl   String?
  category   Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId Int
  products   Product[]

  @@unique([categoryId, name])
  @@index([categoryId])
}

model Product {
  id            Int            @id @default(autoincrement())
  name          Json
  variant       Json
  stock         Int            @default(0)
  weight        Float?
  careDetails   Json           @default("[]")
  description   Json?
  isBestProduct Boolean        @default(false)
  isActive      Boolean        @default(true)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  images        ProductImage[]
  subCategory   SubCategory    @relation(fields: [subCategoryId], references: [id], onDelete: Restrict)
  subCategoryId Int
  orderItems    OrderItem[]
  prices        ProductPrice[]
  cartItems     CartItem[]
  discounts     Discount[]

  @@index([subCategoryId])
}

model ProductPrice {
  id         Int      @id @default(autoincrement())
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId  Int
  currency   Currency @relation(fields: [currencyId], references: [id], onDelete: Cascade)
  currencyId Int
  price      Float
  @@unique([productId, currencyId])
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
}

model Testimonial {
  id        Int      @id @default(autoincrement())
  author    String
  quote     Json
  rating    Int
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PaymentMethod {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  code      String    @unique
  isActive  Boolean   @default(true)
  config    Json      @default("{}")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  orders    Order[]
}

model Order {
  id              Int           @id @default(autoincrement())
  user            User          @relation(fields: [userId], references: [id])
  userId          Int
  address         String
  shippingCost    Float
  subtotal        Float
  total           Float
  paymentStatus   PaymentStatus @default(PENDING_PAYMENT)
  orderStatus     OrderStatus   @default(PENDING)
  paymentMethod   PaymentMethod? @relation(fields: [paymentMethodId], references: [id], onDelete: SetNull)
  paymentMethodId Int?
  orderItems      OrderItem[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  paymentDueDate  DateTime?
  trackingNumber  String?
  currencyCode    String        @default("IDR")
  paymentDetails  Json?
  midtransOrderId String?       @unique
  paypalOrderId   String?       @unique
  voucherUsage    VoucherUsage?

  @@index([userId])
  @@index([paymentMethodId])
}

model OrderItem {
  id             Int      @id @default(autoincrement())
  order          Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId        Int
  product        Product? @relation(fields: [productId], references: [id], onDelete: SetNull)
  productId      Int?
  productName    Json
  productVariant Json
  productImage   String?
  price          Float
  qty            Int
  subtotal       Float

  @@index([orderId])
  @@index([productId])
}

model GeneralSetting {
  id               Int      @id @default(1)
  shopName         Json?
  shopDescription  Json?
  logoUrl          String?
  faviconUrl       String?
  bannerImageUrl   String?
  bannerVideoUrl   String?
  address          String?  @db.Text
  email            String?
  phoneNumber      String?
  socialMedia      Json     @default("{}")
  aboutItems       Json?    @default("[]")
  faqs             Json?    @default("[]")
  shippingPolicy   Json?    @default("[]")
  telegramBotToken String?
  telegramChatId   String?
  shippingMode     String   @default("manual")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

// --- DISCOUNT MODELS ---

model Discount {
  id             Int               @id @default(autoincrement())
  name           String
  description    String?
  type           DiscountType
  discountType   DiscountValueType
  value          Float
  startDate      DateTime
  endDate        DateTime
  isActive       Boolean           @default(true)
  maxUsesPerUser Int?
  products       Product[]
  vouchers       Voucher[]
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
}

model Voucher {
  id         Int            @id @default(autoincrement())
  code       String         @unique
  maxUses    Int?
  usesCount  Int            @default(0)
  isActive   Boolean        @default(true)
  discount   Discount       @relation(fields: [discountId], references: [id])
  discountId Int
  usages     VoucherUsage[]
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
}

model VoucherUsage {
  id        Int      @id @default(autoincrement())
  usedAt    DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  voucher   Voucher  @relation(fields: [voucherId], references: [id])
  voucherId Int
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int      @unique

  @@index([userId])
  @@index([voucherId])
}


// --- OTHER MODELS ---

model ShippingProvider {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  code        String   @unique
  isActive    Boolean  @default(false)
  credentials Json     @default("{}")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ShippingZone {
  id        Int                 @id @default(autoincrement())
  name      String              @unique
  isActive  Boolean             @default(true)
  prices    ShippingZonePrice[]
  rates     ShippingRate[]
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
}

model ShippingZonePrice {
  id             Int          @id @default(autoincrement())
  shippingZone   ShippingZone @relation(fields: [shippingZoneId], references: [id], onDelete: Cascade)
  shippingZoneId Int
  currency       Currency     @relation(fields: [currencyId], references: [id], onDelete: Cascade)
  currencyId     Int
  price          Float
  @@unique([shippingZoneId, currencyId])
}

model ShippingRate {
  id        Int                 @id @default(autoincrement())
  city      String
  isActive  Boolean             @default(true)
  zone      ShippingZone        @relation(fields: [zoneId], references: [id], onDelete: Cascade)
  zoneId    Int
  prices    ShippingRatePrice[]
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
  @@index([zoneId])
}

model ShippingRatePrice {
  id             Int          @id @default(autoincrement())
  shippingRate   ShippingRate @relation(fields: [shippingRateId], references: [id], onDelete: Cascade)
  shippingRateId Int
  currency       Currency     @relation(fields: [currencyId], references: [id], onDelete: Cascade)
  currencyId     Int
  price          Float
  @@unique([shippingRateId, currencyId])
}

model Conversation {
  id           Int           @id @default(autoincrement())
  status       String        @default("OPEN")
  user         User          @relation("UserConversations", fields: [userId], references: [id])
  userId       Int
  assignedTo   User?         @relation("AdminAssignments", fields: [assignedToId], references: [id])
  assignedToId Int?
  messages     ChatMessage[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model ChatMessage {
  id             Int          @id @default(autoincrement())
  content        String       @db.Text
  isRead         Boolean      @default(false)
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  conversationId Int
  sender         User         @relation(fields: [senderId], references: [id])
  senderId       Int
  createdAt      DateTime     @default(now())
}

model Cart {
  id        Int        @id @default(autoincrement())
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int        @unique
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  quantity  Int
  @@unique([cartId, productId])
  @@index([cartId])
  @@index([productId])
}